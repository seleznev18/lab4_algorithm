import random
from colorama import Fore, init
init(autoreset=True)
matrix=[]
for i in range(15):
    matrix.append([0]*15)
for i in range(15):
    for j in range(15):
        matrix[i][j]=random.randint(0,1)
def check_side(prev):
    for i in range(len(prev)):
        if not(prev[i][0]==0 or prev[i][0]==14 or prev[i][1]==0 or prev[i][1]==14):
            return 1
    return 0
def path(x,y,prev,arr_start,matrix):
    if [x,y] in arr_start and len(prev)!=0 and check_side(prev)==1:
        prev.append([x,y])
        return prev
    else:
        if x==0:
            if x+1<15 and x+1>0 and not([x+1,y] in prev) and matrix[x+1][y]==0:
                prev.append([x,y])
                return path(x+1,y,prev,arr_start,matrix)
            if y+1<15 and y+1>0 and not([x,y+1] in prev)and matrix[x][y+1]==0:
                prev.append([x,y])
                return path(x,y+1,prev,arr_start,matrix)
            if y-1<15 and y-1>0 and not([x,y-1] in prev)and matrix[x][y-1]==0:
                prev.append([x,y])
                return path(x,y-1,prev,arr_start,matrix)
            if x-1<15 and x-1>0 and not([x-1,y] in prev)and matrix[x-1][y]==0:
                prev.append([x,y])
                return path(x-1,y,prev,arr_start,matrix)
            else:
                return None
        elif x==14:
            if x-1<15 and x-1>0 and not([x-1,y] in prev)and matrix[x-1][y]==0:
                prev.append([x,y])
                return path(x-1,y,prev,arr_start,matrix)
            if y+1<15 and y+1>0 and not([x,y+1] in prev)and matrix[x][y+1]==0:
                prev.append([x,y])
                return path(x,y+1,prev,arr_start,matrix)
            if y-1<15 and y-1>0 and not([x,y-1] in prev)and matrix[x][y-1]==0:
                prev.append([x,y])
                return path(x,y-1,prev,arr_start,matrix)
            if x+1<15 and x+1>0 and not([x+1,y] in prev) and matrix[x+1][y]==0:
                prev.append([x,y])
                return path(x+1,y,prev,arr_start,matrix)
            else:
                return None
        elif y==0:
            if y+1<15 and y+1>0 and not([x,y+1] in prev)and matrix[x][y+1]==0:
                prev.append([x,y])
                return path(x,y+1,prev,arr_start,matrix)
            if x-1<15 and x-1>0 and not([x-1,y] in prev)and matrix[x-1][y]==0:
                prev.append([x,y])
                return path(x-1,y,prev,arr_start,matrix)
            if y-1<15 and y-1>0 and not([x,y-1] in prev)and matrix[x][y-1]==0:
                prev.append([x,y])
                return path(x,y-1,prev,arr_start,matrix)
            if x+1<15 and x+1>0 and not([x+1,y] in prev) and matrix[x+1][y]==0:
                prev.append([x,y])
                return path(x+1,y,prev,arr_start,matrix)
            else:
                return None
        else:
            if y-1<15 and y-1>0 and not([x,y-1] in prev)and matrix[x][y-1]==0:
                prev.append([x,y])
                return path(x,y-1,prev,arr_start,matrix)
            if y+1<15 and y+1>0 and not([x,y+1] in prev)and matrix[x][y+1]==0:
                prev.append([x,y])
                return path(x,y+1,prev,arr_start,matrix)
            if x-1<15 and x-1>0 and not([x-1,y] in prev)and matrix[x-1][y]==0:
                prev.append([x,y])
                return path(x-1,y,prev,arr_start,matrix)
            if x+1<15 and x+1>0 and not([x+1,y] in prev) and matrix[x+1][y]==0:
                prev.append([x,y])
                return path(x+1,y,prev,arr_start,matrix)
            else:
                return None
        
            
kl,ku,kr,kd=0,0,0,0
arr_start=[]
for i in range(15):
    if matrix[i][0]==0:
        kl+=1
        arr_start.append([i,0])
    if matrix[0][i]==0:
        ku+=1
        arr_start.append([0,i])
    if matrix[i][14]==0:
        kr+=1
        arr_start.append([i,14])
    if matrix[14][i]==0:
        kd+=1
        arr_start.append([14,i])
print('     ЛАБИРИНТ:')
for i in range(15):
        print(matrix[i])
if kl+ku+kr+kd<2:
    print('Из лабиринта нет выхода')
flag=False
for i in range(len(arr_start)):
    x=path(arr_start[i][0],arr_start[i][1],[],arr_start,matrix)
    if x is not None:
        The_path=x
        flag=True
        break
if flag==False:
    print('Из лабиринта нет выхода')
else:
    print('     ВЫХОД ИЗ ЛАБИРИНТА:')
    for i in range(15):
        for j in range(15):
            if [i,j] in The_path:
                print("\033[31m0  ",end='')
            else:
                print(matrix[i][j],' ',end='')
        print()
